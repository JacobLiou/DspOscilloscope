<Window x:Class="SerialOscilloscope.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SerialOscilloscope"
        xmlns:ScottPlot="clr-namespace:ScottPlot;assembly=ScottPlot.WPF" 
        xmlns:vm="clr-namespace:SerialOscilloscope.ViewModels"
        mc:Ignorable="d"
        Title="串口示波器" Height="680" Width="1100" Icon="./Resource/Oscilloscope.ico"
        d:DataContext="{d:DesignInstance vm:OscilloscopeVm, d:IsDesignTimeCreatable=True}">


    <Grid Background="#f0f0f0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="350"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="100"/>
            </Grid.RowDefinitions>
            <Border Grid.Row="0" Margin="10" BorderThickness="2" BorderBrush="LightGray">
                <Grid>
                    <!--<Grid.RowDefinitions>
                        <RowDefinition Height="20"/>
                        <RowDefinition />
                    </Grid.RowDefinitions>-->
                    <!--<Slider Grid.Row="0" x:Name="CursorSlider" IsMoveToPointEnabled="True" Maximum="100" 
                            TickPlacement="BottomRight" Background="Black"/>-->
                    <WpfPlot Grid.Row="1" x:Name="PlotCtrl" />
                </Grid>
            </Border>

            <ItemsControl Grid.Row="1" ItemsSource="{Binding ChannelTexts}">
                <ItemsControl.Resources>
                    <vm:ChannelColorConverter x:Key="ChannelColorCvt"/>
                </ItemsControl.Resources>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="4" Margin="10, 0, 10, 10"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Margin="1" Background="DarkGray" FontSize="14" FontWeight="Bold"
                                   Foreground="{Binding TextColor, Converter={StaticResource ChannelColorCvt}}"
                                   Text="{Binding SignalText}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

        </Grid>

        <WrapPanel Grid.Column="1">
            <GroupBox Header="设置"  Width="340" BorderBrush="DarkGray">
                <GroupBox.Resources>
                    <vm:BoolInverseConverter x:Key="BoolInverseCvt"/>
                </GroupBox.Resources>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="65"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="65"/>
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center">
                        <TextBlock Text="文件路径(.out)"  VerticalAlignment="Center" />
                        <TextBox x:Name="CoffPathText" Text="{Binding CoffPath}" IsReadOnly="True" VerticalContentAlignment="Center" Width="150" Height="28" Margin="10 0 0 0" />
                        <Button x:Name="ImportFileButton"  Content="选择文件"  Margin="10 0 0 0" Command="{Binding ImportCoffCommand}"/>
                    </StackPanel>

                    <WrapPanel Grid.Row="1" Orientation="Horizontal" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center"
                               IsEnabled="{Binding Path=IsRendering, Converter={StaticResource BoolInverseCvt}}">
                        <TextBlock Text="通讯串口:" Margin="5" Width="50" Height="20" VerticalAlignment="Center" TextAlignment="Right"/>
                        <ComboBox Width="75" Height="20" Margin="5" 
                                  ItemsSource="{Binding AvailablePortsComboItems}" 
                                  SelectedValue="{Binding SerialPort}"
                                  />
                        <TextBlock Text="波特率:" Margin="5" Width="45" Height="20" VerticalAlignment="Center" TextAlignment="Right"/>
                        <TextBox Margin="5" Width="80" Height="20" Text="{Binding Path=SerialBaudRate, 
                                                                        UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>

                        <TextBlock Text="采样模式:" Margin="5" Width="50" VerticalAlignment="Center" TextAlignment="Right"/>
                        <ComboBox  Margin ="5"  Width="75" Height="20"
                                   SelectedIndex="{Binding Path=SamplingMode}">
                            <ComboBoxItem Content="标准模式" IsSelected="True"/>
                            <ComboBoxItem Content="滚动模式"/>
                        </ComboBox>
                        <TextBlock Text="采样率:"  Margin="5" Width="45" Height="20" VerticalAlignment="Center" TextAlignment="Right"/>
                        <TextBox Margin="5" Width="80" Height="20" Text="{Binding Path=SamplingRate, 
                                                                        UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>


                    </WrapPanel>

                    <DataGrid Grid.Row="2" x:Name="ChannelSettingsGrid"   Margin="2" 
                              BorderBrush="LightGray"  GridLinesVisibility="None"
                              AutoGenerateColumns="False" ItemsSource="{Binding ChannelsSettings}" 
                              CanUserResizeColumns="False" CanUserResizeRows="False"
                              CanUserAddRows="False" CanUserSortColumns="False"
                              SelectionMode="Single" SelectionUnit="Cell"
                              IsReadOnly="{Binding Path=IsRendering}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="" IsReadOnly="True" Binding="{Binding TagName}" Width="35" />

                            <DataGridTemplateColumn Header="变量名/Hex地址" Width="145">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Path=VariableName, UpdateSourceTrigger=PropertyChanged}"
                                                 IsReadOnly="{Binding ElementName=ChannelSettingsGrid, Path=IsReadOnly}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>

                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="数据类型" Width="65">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox SelectedIndex="{Binding Path=DataType, UpdateSourceTrigger=PropertyChanged}"
                                                  IsEnabled="{Binding ElementName=ChannelSettingsGrid, Path=IsReadOnly, 
                                                                UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolInverseCvt}}"
                                                  ItemsSource="{Binding Path=DataContext.DataTypeComboItems, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}">

                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="浮点倍数" Width="65">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox SelectedIndex="{Binding Path=FloatDataScale, UpdateSourceTrigger=PropertyChanged}"
                                                  IsEnabled="{Binding ElementName=ChannelSettingsGrid, Path=IsReadOnly, 
                                                                UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolInverseCvt}}"
                                                  ItemsSource="{Binding Path=DataContext.DataScaleComboItems, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}">

                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>

                    </DataGrid>

                    <StackPanel Grid.Row="3" Orientation="Horizontal" Margin="2" HorizontalAlignment="Left" VerticalAlignment="Center">

                        <Button x:Name="StartButton" Content="Start" Height="50" Width="50" Margin="5" 
                                Command="{Binding StartCommand}"
                                IsEnabled="{Binding Path=IsRendering, Converter={StaticResource BoolInverseCvt}}"/>
                        <Button x:Name="StopButton" Content="Stop"  Height="50" Width="50" Margin="5" 
                                Command="{Binding StopCommand}"/>

                    </StackPanel>
                </Grid>

            </GroupBox>

            <GroupBox Header="写入变量" Height="80" Width="340" BorderBrush="DarkGray">

                <WrapPanel Orientation="Horizontal" VerticalAlignment="Center">

                    <DataGrid x:Name="VariablesToWriteGrid"  Width="295"
                              GridLinesVisibility="None"  BorderBrush="LightGray"
                              CanUserResizeColumns="False" CanUserResizeRows="False" 
                              CanUserAddRows="False" CanUserSortColumns="False" 
                              SelectionMode="Single"  SelectionUnit="Cell" 
                              AutoGenerateColumns="False" ItemsSource="{Binding VariablesToWrite }" >
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="变量名/Hex地址" Width="120">

                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Path=VariableName, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="数值" Width="75">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Path=DataValueString, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="类型" Width="45">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox SelectedIndex="{Binding Path=DataType, UpdateSourceTrigger=PropertyChanged}"
                                                  ItemsSource="{Binding Path=DataContext.DataToWriteTypeComboItems,
                                                                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}">
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="倍数" Width="45">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox SelectedIndex="{Binding Path=FloatDataScale, UpdateSourceTrigger=PropertyChanged}"
                                                  ItemsSource="{Binding Path=DataContext.DataToWriteScaleComboItems, 
                                                               RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}">
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>

                    </DataGrid>

                    <!--<WrapPanel Orientation="Horizontal" Width="290" Margin="2, 2, 2 , 0">
                        <Label Content="变量名/Hex地址" Width="125" Height="25" BorderBrush="LightGray" BorderThickness="1" FontSize="9"/>
                        <Label Content="数值" Width="65" Height="25" BorderBrush="LightGray" BorderThickness="1" FontSize="9"/>
                        <Label Content="数据类型" Width="50" Height="25" BorderBrush="LightGray" BorderThickness="1" FontSize="9"/>
                        <Label Content="浮点倍数" Width="50" Height="25" BorderBrush="LightGray" BorderThickness="1" FontSize="9"/>

                        <TextBox Width="125" Height="25" />
                        <TextBox Width="65" Height="25"/>
                        <ComboBox Width="50" Height="25" ItemsSource="{Binding DataTypeComboItems}"/>
                        <ComboBox Width="50" Height="25" ItemsSource="{Binding DataScaleComboItems}"/>
                    </WrapPanel>-->
                    <Border >
                        <Button Content="写入"  Margin="2" Command="{Binding Path=WriteCommand}"/>
                    </Border>
                </WrapPanel>


            </GroupBox>

            <GroupBox Header="波形设置" Width="340" BorderBrush="DarkGray">
                <GroupBox.Resources>
                    <vm:TimeUnitSliderConverter x:Key="TimeUnitSliderCvt"/>
                    <vm:PlotScaleSliderConverter x:Key="PlotScaleSliderCvt"/>
                    <vm:ChannelColorConverter x:Key="ChannelColorCvt"/>
                </GroupBox.Resources>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <WrapPanel Grid.Row="0" x:Name="TimeUnitControlPanel"  Orientation="Horizontal" Margin="2"
                               HorizontalAlignment="Left" VerticalAlignment="Center" >
                        <TextBlock Text="时间单位: "  VerticalAlignment="Center" />
                        <TextBlock x:Name ="TimeUnitText" VerticalAlignment="Center" Width="70"
                                   Text="{Binding Path=TimeUnitScale,  Mode=OneWay, UpdateSourceTrigger=PropertyChanged,
                                         Converter={StaticResource TimeUnitSliderCvt}}" />
                        <Slider x:Name="TimeUnitSlider" Width="185" Margin="5" Maximum="10" Foreground="DarkGray"
                                IsSnapToTickEnabled="True" IsMoveToPointEnabled="True" TickPlacement="BottomRight"
                                Value="{Binding Path=TimeUnitScale, UpdateSourceTrigger=PropertyChanged,
                                        Converter={StaticResource TimeUnitSliderCvt}}"/>
                    </WrapPanel>

                    <DataGrid Grid.Row="1" x:Name="ChannelViewGrid"  Margin="2"
                              BorderBrush="LightGray"  GridLinesVisibility="None"
                              AutoGenerateColumns="False" ItemsSource="{Binding ChannelsSettings}" 
                              CanUserResizeColumns="False" CanUserResizeRows="False"
                              CanUserAddRows="False" CanUserSortColumns="False"
                              SelectionMode="Single" SelectionUnit="Cell">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="" Width="35" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding TagName}" Margin="5"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="线色" Width="35">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Margin="5" Background="{Binding Path=LineColor, Mode=OneWay, 
                                                    UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ChannelColorCvt}}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="显示" Width="35">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox Margin="5" IsChecked="{Binding Path=IsVisible, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="选中" Width="35">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox Margin="5" IsChecked="{Binding Path=IsSelected, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="显示倍率" Width="170">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <WrapPanel Orientation="Horizontal" Margin="2"
                                                   HorizontalAlignment="Left" VerticalAlignment="Center">
                                            <TextBlock Width="35" Text="{Binding Path=DataPlotScale, Mode=OneWay, UpdateSourceTrigger=PropertyChanged,
                                                            Converter={StaticResource PlotScaleSliderCvt}}"/>
                                            <Slider Width="125" Maximum="11" IsSnapToTickEnabled="True" IsMoveToPointEnabled="True"
                                                    TickPlacement="BottomRight" Foreground="DarkGray"
                                                    Value="{Binding Path=DataPlotScale, UpdateSourceTrigger=PropertyChanged,
                                                            Converter={StaticResource PlotScaleSliderCvt}}"/>
                                        </WrapPanel>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                        </DataGrid.Columns>

                    </DataGrid>

                </Grid>


            </GroupBox>

            <!--<TextBox x:Name="DebugText1" Margin="5" Width="200" Text="{Binding DebugText1}"/>-->
            <!--<Button x:Name="DebugButton1" Width="50" Content="click1" Click="DebugButton1_OnClick"/>-->
            <!--<Button x:Name="DebugButton2" Width="50" Content="click2" Click="DebugButton2_OnClick"/>-->
        </WrapPanel>


    </Grid>
</Window>
